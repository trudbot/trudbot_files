import time
# help(time)


'''① UTC时间，又称“世界标准时间”，每个国家的当地时间就是以这个时间作为标准，进行换算划分出来的，这个时间的存在就是为了能够统一全世界的时间。这个怎么划分属于地理知识，这里你只需要知道什么是UTC时间，设置UTC
时间的意义又在哪里，就行了。 ② CST时间，又叫“北京时间”、“中国标准时间”，这个就是经常所说的本地时间，人在中国，这个就是你的本地时间。根据地理知识，中国按照时区上的划分，属于东八区，比UTC时间要早8个小时，也就是说UTC+8
就是中国标准时间。 ———————————————— 版权声明：本文为CSDN博主「数据分析与统计学之美」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。 '''

'''python中，时间的3种表现形式(这个很重要)
① 格式化字符串表示形式（format_time）：比说"2020-01-07 13:55:47"。这种方式更为灵活，你任意给我一个时间，我可以用任何自定义格式将其输出。
② 时间戳表示形式（timestamp）：时间戳表示的是从1970-01-01 00:00:00至今的时间差换算成【秒数】的展示。这种时间格式很常见，很多数据库系统导出的数据会见到这种数据，因此学会这种数据的处理方法很有必要。
③ 时间元组（struct_time）：用表示时间的9个元素组成的元组。分别是年、月、日、时、分、秒、一周的第几天(星期几)、一年的第几天、tm_isdst是否是夏令时(-1表示不确定，0表示不是夏令时，1表示是夏令时)。
注意：时间元组这种时间形式中，0表示一周的第一天(星期一)；1表示一周的第二天(星期二)…'''


# time.time()：返回1970-01-01 00:00:00至今一共经过了多少秒，也就是返回了一个时间戳

# time.sleep(num), 让程序延迟指定秒数后，再执行

# time.gmtime(timestamp)：返回的是时间元组struct_time，但返回的是UTC时间；
# 当括号中传入一个时间戳，返回的就是该时间的时间元组；
# 当括号中什么都不写，默认传入的就是当前时间的时间戳，返回的因此就是当前时间的时间元组
# time.localtime(), 和gmtime相同， 但不传入参数时返回的是中国时间
# struct_time.tm_??  , 返回时间元组的指定属性

print(time.gmtime())
print(time.gmtime(time.time()))
print(time.localtime())
print(time.localtime().tm_year)

# time.mktime(struct_time)：传入一个时间元组，返回一个时间戳
# 注意：这个时间元组，只能传入9个参数组合而成的元组，一个参数都不能少，比如说你传入一个(2019,12,23)，就会报错。
print(time.mktime(time.localtime()))

# time.strftime(format,struct_time)：传入一个时间元组，返回任意格式的时间展示
# 在format参数中，输入含格式化符号的字符串（不能包含汉字），%Y表示年份，%m表示月份（0~12），%d表示 日（0~31), %H为 时（0~23），%M为分， %S为秒，，，等等
print(time.strftime('%Y-%m-%d-%H-%M-%S', time.localtime()))
